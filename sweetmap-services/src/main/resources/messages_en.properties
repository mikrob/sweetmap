up=\u2191
down=\u2193
left=\u2039
right=\u203A

validator.assertFalse=validation failed
validator.assertTrue=validation failed
validator.future=must be a future date
validator.length=length must be between {min} and {max}
validator.max=must be less than or equal to {value}
validator.min=must be greater than or equal to {value}
validator.notNull=may not be null
validator.past=must be a past date
validator.pattern=must match "{regex}"
validator.range=must be between {min} and {max}
validator.size=size must be between {min} and {max}
validator.email=must be a well-formed email address

org.jboss.seam.loginFailed=Login failed
org.jboss.seam.loginSuccessful=Welcome, #0!

org.jboss.seam.TransactionFailed=Transaction failed
org.jboss.seam.NoConversation=The conversation ended, timed out or was processing another request
org.jboss.seam.IllegalNavigation=Illegal navigation
org.jboss.seam.ProcessEnded=Process #0 already ended
org.jboss.seam.ProcessNotFound=Process #0 not found
org.jboss.seam.TaskEnded=Task #0 already ended
org.jboss.seam.TaskNotFound=Task #0 not found
org.jboss.seam.NotLoggedIn=Please log in first

javax.faces.component.UIInput.CONVERSION=value could not be converted to the expected type
javax.faces.component.UIInput.REQUIRED=value is required
javax.faces.component.UIInput.UPDATE=an error occurred when processing your submitted information
javax.faces.component.UISelectOne.INVALID=value is not valid
javax.faces.component.UISelectMany.INVALID=value is not valid

javax.faces.converter.BigDecimalConverter.DECIMAL=value must be a number
javax.faces.converter.BigDecimalConverter.DECIMAL_detail=value must be a signed decimal number consisting of zero or more digits, optionally followed by a decimal point and fraction, eg. {1}
javax.faces.converter.BigIntegerConverter.BIGINTEGER=value must be an integer
javax.faces.converter.BigIntegerConverter.BIGINTEGER_detail=value must be a signed integer number consisting of zero or more digits
javax.faces.converter.BooleanConverter.BOOLEAN=value must be true or false
javax.faces.converter.BooleanConverter.BOOLEAN_detail=value must be true or false (any value other than true will evaluate to false)
javax.faces.converter.ByteConverter.BYTE=value must be a number between 0 and 255
javax.faces.converter.ByteConverter.BYTE_detail=value must be a number between 0 and 255
javax.faces.converter.CharacterConverter.CHARACTER=value must be a character
javax.faces.converter.CharacterConverter.CHARACTER_detail=value must be a valid ASCII character
javax.faces.converter.DateTimeConverter.DATE=value must be a date
javax.faces.converter.DateTimeConverter.DATE_detail=value must be a date,  eg. {1}
javax.faces.converter.DateTimeConverter.TIME=value must be a time
javax.faces.converter.DateTimeConverter.TIME_detail=value must be a time,  eg. {1}
javax.faces.converter.DateTimeConverter.DATETIME=value must be a date and time
javax.faces.converter.DateTimeConverter.DATETIME_detail=value must be a date and time,  eg. {1}
javax.faces.converter.DateTimeConverter.PATTERN_TYPE=a pattern or type attribute must be specified to convert the value
javax.faces.converter.DoubleConverter.DOUBLE=value must be a number
javax.faces.converter.DoubleConverter.DOUBLE_detail=value must be a number between 4.9E-324 and 1.7976931348623157E308
javax.faces.converter.EnumConverter.ENUM=value must be convertible to an enum
javax.faces.converter.EnumConverter.ENUM_detail=value must be convertible to an enum or from the enum that contains the constant {1}
javax.faces.converter.EnumConverter.ENUM_NO_CLASS=value must be convertible to an enum or from the enum, but no enum class provided
javax.faces.converter.EnumConverter.ENUM_NO_CLASS_detail=value must be convertible to an enum or from the enum, but no enum class provided
javax.faces.converter.FloatConverter.FLOAT=value must be a number
javax.faces.converter.FloatConverter.FLOAT_detail=value must be a number between 1.4E-45 and 3.4028235E38
javax.faces.converter.IntegerConverter.INTEGER=value must be an integer
javax.faces.converter.IntegerConverter.INTEGER_detail=value must be an integer number between -2147483648 and 2147483647
javax.faces.converter.LongConverter.LONG=value must be an integer
javax.faces.converter.LongConverter.LONG_detail=value must be an integer number between -9223372036854775808 and 9223372036854775807
javax.faces.converter.NumberConverter.CURRENCY=value must be a currency amount
javax.faces.converter.NumberConverter.CURRENCY_detail=value must be a currency amount, eg. {1}
javax.faces.converter.NumberConverter.PERCENT=value must be a percentage amount
javax.faces.converter.NumberConverter.PERCENT_detail=value must be a percentage amount, eg. {1}
javax.faces.converter.NumberConverter.NUMBER=value must be a number
javax.faces.converter.NumberConverter.NUMBER_detail=value must be a number
javax.faces.converter.NumberConverter.PATTERN=value must be a number
javax.faces.converter.NumberConverter.PATTERN_detail=value must be a number
javax.faces.converter.ShortConverter.SHORT=value must be an integer
javax.faces.converter.ShortConverter.SHORT_detail=value must be an integer number between -32768 and 32767

javax.faces.validator.DoubleRangeValidator.MAXIMUM=value must be less than or equal to {0}
javax.faces.validator.DoubleRangeValidator.MINIMUM=value must be greater than or equal to {0}
javax.faces.validator.DoubleRangeValidator.NOT_IN_RANGE=value must be between {0} and {1}
javax.faces.validator.DoubleRangeValidator.TYPE=value is not of the correct type
javax.faces.validator.LengthValidator.MAXIMUM=value must be shorter than or equal to {0} characters
javax.faces.validator.LengthValidator.MINIMUM=value must be longer than or equal to {0} characters
javax.faces.validator.LongRangeValidator.MAXIMUM=value must be less than or equal to {0}
javax.faces.validator.LongRangeValidator.MINIMUM=value must be greater than or equal to {0}
javax.faces.validator.LongRangeValidator.NOT_IN_RANGE=value must be between {0} and {1}
javax.faces.validator.LongRangeValidator.TYPE=value is not of the correct type

javax.faces.validator.NOT_IN_RANGE=value must be between {0} and {1}
javax.faces.converter.STRING=value could not be converted to a string

org.sweetmap.main.error=Error
org.sweetmap.main.error.desc=Oups, An error has happened !
org.sweetmap.main.title=The Web Tenderness Map
org.sweetmap.main.sweetmap=The Tenderness Map
org.sweetmap.main.title.lowercase=the web tenderness map
org.sweetmap.main.by= The Web Tenderness Map by Serge Bouchardon - Maxime Rameau - Mikael Robert - Luc Dall'Armellina
org.sweetmap.menu.home=home
org.sweetmap.menu.connectedas=Signed in As
org.sweetmap.menu.notconnected=Not logged in
org.sweetmap.menu.themap=the map
org.sweetmap.menu.presentation=presentation
org.sweetmap.menu.credits=credits
org.sweetmap.menu.contacts=contact
org.sweetmap.menu.login=Login
org.sweetmap.menu.logout=Logout
org.sweetmap.title=Title
org.sweetmap.status=State
org.sweetmap.actions=Actions
org.sweetmap.author=Author
org.sweetmap.addedby=Added by
org.sweetmap.page.presentation= <p>In the 17th century, the <i>Tenderness Map</i> was the map of an imaginary country called "Tenderness", inspired by <i>Clelia</i>, a novel written by the French author Madeleine de Scud\u00E9ry.</p><p><a href\="http\://fr.wikipedia.org/wiki/Fichier\:Carte_du_tendre_300dpi.jpg" target\="_blank"> See the original map </a> and <a href\="http\://strangemaps.wordpress.com/2008/02/18/245-love\u2019s-topography-la-carte-de-tendre/" target\="_blank"> comments </a></p><p>The <i>Tenderness Map</i> is a topographic allegory, representing the stations of love as if they were real villages and paths. In this topography of love, the river <i>Inclination</i> flows smoothly because it is domesticated, showing the control over passions, whereas the <i>Sea</i> is dangerous because it represents the danger of unbridled passions.</p><p>Nowadays, what could the <i>Web Tenderness</i> Map look like ?</p><p>We have designed such a navigable map by crawling websites dealing with encounter, love poetry, relationship advice, marriage counseling and divorce...</p><p>This map is evolutive. It is reconfigured regularly to reflect the evolution of the sites and of the links between the different sites. Some new sites and links appear, some disappear. We use crawlers to get the content of the different sites and to follow the links. The map is drawn dynamically. The nodes correspond to websites. The curves between the nodes represent the hyperlinks between these sites.</p><p>The user can thus navigate from site to site on the map. When he clicks on a node of the map, a text written by an author and randomly chosen is diplayed above the content of the site. The journey through this web topography of love is indeed dual. The reader has access not only to the different sites on the map, but also to texts on encounters and relationships written by various authors. \u2028In fact, this is a contributive piece. The <i>Web Tenderness Map</i> is the result of collective writing where information seeking and literature are closely linked.</p><p>Feel free to draw your own journey on the <i>Web Tenderness Map</i>\!</p>
org.sweetmap.page.title.presentation=Presentation
org.sweetmap.pleaselogin=You must identify yourself to continue.
org.sweetmap.username=Username
org.sweetmap.password=Password
org.sweetmap.rememberme=Remember me
org.sweetmap.corpus.out=You can't navigate through a page or a site which is not in our database.

org.sweetmap.language=Language
org.sweetmap.textentry.addtextentry=Add a text
org.sweetmap.category=Category
org.sweetmap.save=Save
org.sweetmap.update=Update
org.sweetmap.delete=Delete
org.sweetmap.cancel=Cancel
org.sweetmap.textentry.list.title=Text List
org.sweetmap.textentry.list.noone=No text in database
org.sweetmap.textentry.list.create=Write text
org.sweetmap.mainmenu.write=Writing
org.sweetmap.mainmenu.admin=Administration
org.sweetmap.mainmenu.texts=Texts
org.sweetmap.writetext=Write a text
org.sweetmap.textlist=Text list
org.sweetmap.selectcategorynolabel=Select a category
org.sweetmap.selectstatusnolabel=Select a state
org.sweetmap.selectlanguage=Select a language
org.sweetmap.english=English
org.sweetmap.french=French
org.sweetmap.sitenode.create=Create a site node
org.sweetmap.menu.accueil=home
org.sweetmap.main.scrollingtext=After this, you must return to New Friendship, in order to survey the road which leads to Tenderness-upon-Gratitude. Here observe that the first stage takes you to Complaisance. Next, to a little village named Submission; and then to a charming one, at no great distance, called Little Attentions; whence you proceed to Assiduity, and to yet another village, named Earnestness; and so on to Great Services, which, in order to indicate how few people render them, is represented as the smallest of all Afterwards, your road leads to Sensibility; to Obedience; and, finally, to Constant Friendship, which is, no doubt, the safest way to reach the desired goal of Tenderness-upon-Gratitude.
org.sweetmap.credits.title=Credits
org.sweetmap.default.home.title=Home
org.sweetmap.map.legend.title=Sites Categories
org.sweetmap.contact.content=If you want to contribute as an author or to give any comments, please contact Serge Bouchardon at serge dot bouchardon at utc dot fr
org.sweetmap.credits.serge=Serge Bouchardon : Project manager
org.sweetmap.credits.luc=Luc Dall'Armellina : Designer
org.sweetmap.credits.maxime=Maxime Rameau : Developer
org.sweetmap.credits.mikael=Mikael Robert : Developer
org.sweetmap.credits.alexis=Alexis Jacomy : Flash module
org.sweetmap.credits.gephi=Gephi's Team : Spacialization Algorithms
